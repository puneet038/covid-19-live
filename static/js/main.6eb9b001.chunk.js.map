{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","input","setInput","output","setOutput","getCovidData","a","fetch","res","json","actualData","statewise","useEffect","filter","val","state","toLowerCase","includes","className","onChange","e","target","value","type","placeholder","class","aria-hidden","style","marginLeft","map","currele","ind","confirmed","recovered","deaths","active","lastupdatedtime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA6EeA,MAzEf,WACE,MAAqBC,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAY,uCAAG,8BAAAC,EAAA,sEACHC,MAAM,0CADH,cACbC,EADa,gBAEIA,EAAIC,OAFR,OAEbC,EAFa,OAInBV,EAAQU,EAAWC,WAJA,2CAAH,qDAqBlB,OAfAC,qBAAU,WACRP,MACA,IACFO,qBAAU,WACRR,EAAU,IACVL,EAAKc,QAAO,SAAAC,GAELA,EAAIC,MAAMC,cAAcC,SAAShB,EAAMe,gBAExCZ,GAAU,SAAAD,GAAM,4BAAMA,GAAN,CAAaW,YAInC,CAACb,IAGD,sBAAKiB,UAAU,WAAf,UAEE,sBAAKA,UAAU,YAAf,UACD,oBAAIA,UAAU,UAAd,oDACA,sBAAKA,UAAU,YAAf,UACA,uBAAQC,SAAU,SAAAC,GAAC,OAAElB,EAASkB,EAAEC,OAAOC,QAAQJ,UAAU,cAAcK,KAAK,SAASC,YAAY,oBACjG,mBAAGC,MAAM,uBAAuBC,cAAY,OAAOC,MAAO,CAACC,WAAW,kBAGvE,qBAAKV,UAAU,QAAf,SACC,wBAAOA,UAAU,4CAAjB,UACE,gCACE,+BACE,uCACA,2CACA,2CACA,uCACA,wCACA,8CAGJ,gCAEIf,EAAO0B,KAAI,SAACC,EAAQC,GAElB,OACU,+BACG,6BAAKD,EAAQf,QACb,6BAAKe,EAAQE,YACb,6BAAKF,EAAQG,YACb,6BAAKH,EAAQI,SACb,6BAAKJ,EAAQK,SACb,6BAAKL,EAAQM,oBANPL,iBC5CjBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.6eb9b001.chunk.js","sourcesContent":["\nimport React,{useEffect, useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [data,setData]=useState([]);\n  const [input,setInput]=useState('');\n  const [output,setOutput]=useState([]);\n  const getCovidData = async ()=>{\n    const res=await fetch('https://api.covid19india.org/data.json');\n    const actualData=await res.json();\n    //console.log(actualData);\n    setData(actualData.statewise);\n  }\n  useEffect(()=>{\n    getCovidData();\n  },[]);\n  useEffect(()=>{\n    setOutput([])\n    data.filter(val=>\n      {\n        if(val.state.toLowerCase().includes(input.toLowerCase()))\n        {\n          setOutput(output=>[...output,val])\n        }\n      })\n\n  },[input]);\n  \n  return (\n    <div className=\"main-div\">\n      \n      <div className=\"child-div\">\n     <h1 className=\"heading\">COVID-19 in India: State-wise Analysis</h1>\n     <div className=\"input-div\">\n     <input  onChange={e=>setInput(e.target.value)} className=\"input-field\" type=\"search\" placeholder=\"search state...\"></input>\n     <i class=\"fa fa-search add-btn\" aria-hidden=\"true\" style={{marginLeft:'-74.5%'}}></i>\n     </div>\n    </div>\n    <div className=\"table\">\n     <table className=\"table table-striped table-dark hoverTable\">\n       <thead>\n         <tr>\n           <th>STATE</th>\n           <th>CONFIRMED</th>\n           <th>RECOVERED</th>\n           <th>DEATH</th>\n           <th>ACTIVE</th>\n           <th>UPDATED</th>\n         </tr>\n       </thead>\n       <tbody>\n         {\n           output.map((currele,ind)=>{\n           \n             return(\n                       <tr key={ind} >\n                          <td>{currele.state}</td>\n                          <td>{currele.confirmed}</td>\n                          <td>{currele.recovered}</td>\n                          <td>{currele.deaths}</td>\n                          <td>{currele.active}</td>\n                          <td>{currele.lastupdatedtime}</td>\n                       </tr>\n                   );\n           }\n           )\n           \n          }\n       \n       </tbody>\n     </table>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}